.. _init_cold_nft:

Initializing the Hot NFT Payment Credential Script
===================================================

The next step is to initialize the payment credential script for the cold
credential NFT, which will be very similar to initializing the cold NFT script.

Prerequisites
-------------

* :ref:`init_hot_committee`

Step 1: Obtaining the X.509 certificate files
---------------------------------------------

Follow the steps listed in :ref:`init_cold_nft`.
``child-7`` through ``child-9`` will belong to the voting role.

Step 2: Creating the assets
---------------------------

We can now use ``orchestrator-cli`` to initialize the script:

.. code-block:: bash

   $ orchestrator-cli hot-nft init \
       --testnet \
       --cold-nft-policy-id $COLD_POLICY_ID \
       --hot-credential-script-file hot-credential/script.plutus \
       --voting-cert example-certificates/children/child-7/child-7-cert.pem \
       --voting-cert example-certificates/children/child-8/child-8-cert.pem \
       --voting-cert example-certificates/children/child-9/child-9-cert.pem \
       -o hot-nft


Let's see what assets were created.

.. code-block:: bash

   $ ls hot-nft -1
   datum.json
   script.addr
   script.hash
   script.plutus

``datum.json`` contains the initial datum for the script.

.. code-block:: bash

   $ cat hot-nft/datum.json
   {
       "list": [
           {
               "constructor": 0,
               "fields": [
                   {
                       "bytes": "fb5e0be4801aea73135efe43f4a3a6d08147af523112986dd5e7d13b"
                   },
                   {
                       "bytes": "57f5530e057e20b726b78aa31104d415cb2bce58c669829a44d009c1b1005bcd"
                   }
               ]
           },
           {
               "constructor": 0,
               "fields": [
                   {
                       "bytes": "a3c6cb93a32b02877c61f64ab1c66c4513f12788bf7c500ead7d941b"
                   },
                   {
                       "bytes": "9923f31c1ce14e2acbd505fa8eebd4ce677d1bcd96c6d71610f810f2008ecc3a"
                   }
               ]
           },
           {
               "constructor": 0,
               "fields": [
                   {
                       "bytes": "eda6befbe1a4cb8191752d97b67627a548bcc5f3e4653ecfdba7cdf0"
                   },
                   {
                       "bytes": "ecd64beefcf59f01a975457b0a3623d2b03d5bcf71642a8d8d8275e4668aad31"
                   }
               ]
           }
       ]
   }

We can, and should, sanity check that this datum contains the correct values:

.. code-block:: bash

   $ diff \
      <(cat example-certificates/children/child-7/child-7.keyhash) \
      <(cat hot-nft/datum.json | jq -r '.list[0].fields[0].bytes')
   $ diff \
      <(cat example-certificates/children/child-7/child-7-cert.hash) \
      <(cat hot-nft/datum.json | jq -r '.list[0].fields[1].bytes')
   $ diff \
      <(cat example-certificates/children/child-8/child-8.keyhash) \
      <(cat hot-nft/datum.json | jq -r '.list[1].fields[0].bytes')
   $ diff \
      <(cat example-certificates/children/child-8/child-8-cert.hash) \
      <(cat hot-nft/datum.json | jq -r '.list[1].fields[1].bytes')
   $ diff \
      <(cat example-certificates/children/child-9/child-9.keyhash) \
      <(cat hot-nft/datum.json | jq -r '.list[2].fields[0].bytes')
   $ diff \
      <(cat example-certificates/children/child-9/child-9-cert.hash) \
      <(cat hot-nft/datum.json | jq -r '.list[2].fields[1].bytes')

``script.addr`` contains the script address in bech-32 format:

.. code-block:: bash

   $ cat hot-nft/script.addr
   addr_test1wrwhrnx58j942jj3mauh5graef2c6y0e4phjxaqsakyt23qpxcdz7

``script.plutus`` contains the compiled script bytes wrapped in a text envelope:

.. code-block:: bash

   $ cat hot-nft/script.plutus
   {
         "type": "PlutusScriptV3",
         "description": "",
         "cborHex": "590e54590e510101003332323232323232323232323232323232323232323232323232323222222593333222293232325333573466e1d200000218009919192999ab9a3370e900000109919191919191919191919191919194004c004d5d08084c004d5d0807ccc0bc0d0d5d08074d5d0806cd5d08064d5d0805cd5d08054d5d0804ccc0bdd71aba10089aba10079aba10069aba100599981b91919192999ab9a3370e90000010c004c0e4d5d0800854ccd5cd19b8748008008600660726ae840042a666ae68cdc3a40080043005375c6ae8400426074921035054310035573c0046aae74004dd50009981b8188191aba10049aba10039aba10029aba135744004302e23232325333573466e1d20000021800981b1aba1001981b9aba13574400213039491035054310035573c0046aae74004dd50009aba2001357440026ae88004d5d10009aba2001357440026ae88004d5d10009aba2001357440026ae88004d5d10009aba2001357440022604e9201035054310035573c0046aae74004dd51aba10019919192999ab9a3370e90000010c00cd5d0800854ccd5cd19b8748008008601260486ae840042a666ae68cdc3a400800430073574200215333573466e1d200600218009aba10019aba13574400215333573466e1d200800218059aba10010a999ab9a3370e90050010c014d5d0800cd5d09aba200109813a481035054310035573c0046aae74004dd51aba13574400213024491035054310035573c0046aae74004dd5002c8a4006450029400a450029400a52007222222222222232322223004012303522590018c00a4432005225900291480bc8a54ccd5cd19b8f0040021333573466e1c00c006001002180146402244b203d232323213001023304422590018c00a442b200f229004914a999ab9a3371e00800426607e00600230028c805c8c88c008080c13489640063002910a999ab9a3371e00a0042b2a01f1300e8004884c0420041300400122601000a04b200318014564cc04001006e3002910ac800c564cc0d400a401a4445001004801e0066e9cc125402100122b2027180048860048c009221801013302b290019148024894ccd5cd19b8f00400215333573466e3c00c00460043000180000411593300d0010188c00a44320052222590028c00a42b200521801456401a2b2605c0031801488564cc0e801a402a44440068ac9981a01501348640064520032222590028c00a42b2608c0032190019112c9981f000813c56408e3000910c0091801118012430021180123002244300224300211593302b02101d90c800c8a40064444b2005180148564c0f40064320032223303500101e4600490c00846004910ac9980780180d46005221590018ac9981a001002c564cc0b408c05a264666002452005229003912c8024a400e52660800040031333009229002914801c89640124520092295333573466e3c0100084cc12400c00460051590078ac802c60011801460048ac802c60051800460048ac802c60051801460004600400050038c0092180148600494801c860052933040002001899980491480148a400e44b2009229004914a999ab9a3371e00800426609200600230028ac803c56401630008c00a3002456401630028c0023002456401630028c00a3000230020002801c600490c0092900390c00a430029499820801000c4ccc0248a400a452007225900491480248a54ccd5cd19b8f0040021330490030011801456401e2b200b180046005180122b200b180146001180122b200b1801460051800118010001400e30020009c00e0030010256007001005802300030002816460048c009221801044c02801c0446603e52003222290079111480248a400a5201722900291981c002000ca0044a402e452005280148cc0e001000400014a0041bae005301c00430060033232325333573466e1d20000021803980d9aba1001980e1aba13574400215333573466e1d20020021800980c1aba10010a999ab9a3370e90020010c00854ccd5cd19b87480180086008260409201035054310035573c0046aae74004dd5001460011301d4901035054350018080079980c9109112c80145640063000910c009221590038c00a442b26600e008005133353009120010070030018c00809000912c801460052213232333573466e24cdc019b8300148010cdc3000a400860186600e46603e44b2003180148854ccd5cd19b8f005002180009802000801800a001002300a00133008300700480008c88c008004c06089640063000910992c9803001c600600700144004600800223223002900191111111111111110078c05c8964006300291190c801c8a40064444600e006180d912c800c4c01800e4432005225333573466e3c00802c6002010130060030602a44b2003180048860072005220024c0100043014222590028c002446426002008603244b200318018024cc01c00e0060090052442b26602000400d133009005007898020008301322590018a400122133700900118020008c0488964006290004884cdc024004600800222900291114802c88896402245200d22932900594802494ccd5cd19b8f0020011500318014a004948024a00525333573466e3c0080045400c60040ac801c856400a4320052900291980a801000c88a00491148024a0052225333573466e1c01800c54ccd5cd19b8700500213301800400118010c0088c00915900190c00a300022b26601e01600f1532900b8ac803c540064300290c00921590088c00a42a666ae68cdd78010008a8018c00a4300248564022300290c00a42a666ae68cdc78010008a8018c00815900990ac803484cc05000800630024564016430028c0008c00918010088ccc8cc0048c02c004cc0048ccd5cd19b874800000600100200423232232223300300200130162225900289802800c8856400e26010009221900491194802c8964cc05401400a2b26601a00800313300c0080068c009159301000489980600400544cc00d64c04000630008c00c01f0000018180f9112c800c60052219002912c980a000c4cc01c01800e2b266032012005159330110080018998080061998131112c801440064426600a003003002801800c0071801226600f003004803000c0180a112c800c60012219002912c9804000c4c01800e30020602644b200318004886400a44b2600e003130060038c00800100091199ab9a3370e0040030008011148014a400a46600a0040032801252005280148cc01400800422333573466e3c008006001002233333233001002225333573466e1d200000215933335573e00250022800c004d5d08014d5d1001100090c800c894ca4c00400e42b26666aae7c00ca00450018009aba10049aba20042001219001912c99199999806001914008a00400250022801180c111999aab9f0012800c0004b260106ae8400a42b260086ae8800e4300180180140048c00913280118019aba2002400242b26666aae7c008a004464650010021aba20043574200700090ac99199999807001114008a00400250022801180d111999aab9f0012800c0004b260146ae8400a42b260086ae8800e4300180180140048c00913280118019aba2002400243001800803c00e002460048c009180111801230021199999803800912999ab9a3370e90000010ac9999aab9f0012801140060026ae8400a6ae88008800486400644a6526002007215933335573e0065002232328008010d5d10029aba100480048564c00c00643001800801c0048c0091801230021199999806800914008a00450022801140040048c0083002280114008a00450024600418011111111999999aba40062323300735573a0026aae78004dd5003918029bab00723004375800e460066eb401c8c008dd7003c000a00450022801140088c8c8c94ccd5cd19b874800000860026eb8d5d0800cdd71aba1357440021300c491035054310035573c0046aae74004dd5000919118011bac001300b2233335573e0025000280198021aba100298019aba20024000c02489640063000910c8014894ccd5cd19b87480000044c01800c600411919192999ab9a3370e90000010c004dd71aba10019bad357426ae8800426012921035054310035573c0046aae74004dd500091919192999ab9a3370e90000010c00854ccd5cd19b874800800860082a666ae68cdc3a4008004300013008491035054310035573c0046aae74004dd500091919192999ab9a3370e90000010c004dd71aba10019bad357426ae880042600e921035054310035573c0046aae74004dd500091919192999ab9a3370e90000010991919194004c8c8c94ccd5cd19b8748000008600260186ae840066600a4646464a666ae68cdc3a4000004300130103574200215333573466e1d20020021328019bad35742005375a6ae840066eb4d5d09aba20011aba2001130114901035054310035573c0046aae74004dd50009aba1357440021300d4901035054310035573c0046aae74004dd51aba1005998009800bad357420093232325333573466e1d200000218000a999ab9a3370e90010010c014dd71aba10010a999ab9a3370e90020010c00cd5d080084c035241035054310035573c0046aae74004dd51aba1003998013ae357426ae8800c6014eb888c8c8c94ccd5cd19b874800800860042a666ae68cdc3a400000430013005357420021300d491035054310035573c0046aae74004dd50009aba2001357440022600c921035054310035573c0046aae74004dd500091919192999ab9a3370e90000010c004dd71aba10010a999ab9a3370e90010010c00cdd71aba100109802a49035054310035573c0046aae74004dd5000919319ab9c0018001119118011bab00130042233335573e0025000232801c004c018d55ce800cc014d55cf000a60086ae8800c6ae8400a000600244b200314bd704884cd5d04801488cdd2a400066ae80dd480119aba0375200297ae0180200088c8c00400488cc00cc00800800530011e581c14987a29cf4065e7b38a4cde6bc84b067492ad3ecc8223598a8fe4be004c0122d87a9f581c75a630a046d93e4e4415a31a1823860870aa7e84829c80645aac1e20ff0001"
      }

``script.hash`` contains a hash of the script bytes as hexadecimal text:

.. code-block:: bash

   $ cat hot-nft/script.hash
   dd71ccd43c8b554a51df797a207dca558d11f9a86f237410ed88b544

Step 3: Assemble and submit the transaction
-------------------------------------------

Let's assume the NFT lives in the output
``0f7eed93c104c2eab02d956c00369566443545043ee467558d4950211e734505#0`` along
with 5000000 lovelace, and the orchestrator has an ADA-only output
``44db2d9982eca5bd11a690b838379a6febe81f2c1ead9a211b9a7de75c24f9d7#1``.

Using the assets created in step 2, create a transaction that sends the datum
to the script address:

.. code-block:: bash

   $ cardano-cli conway transaction build \
     --change-address $(cat orchestrator.addr) \
     --tx-in 0f7eed93c104c2eab02d956c00369566443545043ee467558d4950211e734505#0 \
     --tx-in 44db2d9982eca5bd11a690b838379a6febe81f2c1ead9a211b9a7de75c24f9d7#1 \
     --tx-out "$(cat hot-nft/script.addr) + 5000000 + 1 $HOT_POLICY_ID" \
     --tx-out-inline-datum-file hot-nft/datum.json \
     --out-file init-hot-nft.body
   Estimated transaction fee: Coin 187281
   $ cardano-cli conway transaction sign \
     --signing-key-file orchestrator.skey \
     --tx-body-file init-hot-nft.body \
     --out-file init-hot-nft.tx
   $ cardano-cli conway transaction submit --tx-file init-hot-nft.tx
   Transaction successfully submitted.

We can query the script address to verify the UTxO is there:

.. code-block:: bash

   $ cardano-cli conway query utxo --address $(cat hot-nft/script.addr) --output-json
   {
       "3a27ffc02df58a1147f203e3d4b11418ba3aa0cc76164955a80b919fabc0496e#0": {
           "address": "addr_test1wrwhrnx58j942jj3mauh5graef2c6y0e4phjxaqsakyt23qpxcdz7",
           "datum": null,
           "inlineDatum": {
               "list": [
                   {
                       "constructor": 0,
                       "fields": [
                           {
                               "bytes": "fb5e0be4801aea73135efe43f4a3a6d08147af523112986dd5e7d13b"
                           },
                           {
                               "bytes": "57f5530e057e20b726b78aa31104d415cb2bce58c669829a44d009c1b1005bcd"
                           }
                       ]
                   },
                   {
                       "constructor": 0,
                       "fields": [
                           {
                               "bytes": "a3c6cb93a32b02877c61f64ab1c66c4513f12788bf7c500ead7d941b"
                           },
                           {
                               "bytes": "9923f31c1ce14e2acbd505fa8eebd4ce677d1bcd96c6d71610f810f2008ecc3a"
                           }
                       ]
                   },
                   {
                       "constructor": 0,
                       "fields": [
                           {
                               "bytes": "eda6befbe1a4cb8191752d97b67627a548bcc5f3e4653ecfdba7cdf0"
                           },
                           {
                               "bytes": "ecd64beefcf59f01a975457b0a3623d2b03d5bcf71642a8d8d8275e4668aad31"
                           }
                       ]
                   }
               ]
           },
           "inlineDatumhash": "4601cb700ba4288f35fd71eb1d86ddd8207d16b195d5a1fa0e6a4897c21edf79",
           "referenceScript": null,
           "value": {
               "63ac965b8bab57dc91f302dad97d1d70e979e8cae8d3514c7ad6f86f": {
                   "": 1
               },
               "lovelace": 5000000
           }
       }
   }
